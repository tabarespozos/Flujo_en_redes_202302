Traceback (most recent call last):
  File "C:\Users\a.tabaresp\AppData\Local\Programs\Python\Python311\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\a.tabaresp\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\a.tabaresp\AppData\Local\Programs\Python\Python311\Lib\site-packages\jupyter_core\utils\__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\a.tabaresp\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\a.tabaresp\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "C:\Users\a.tabaresp\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\a.tabaresp\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Importamos las bibliotecas necesarias
import networkx as nx
import matplotlib.pyplot as plt
from pulp import LpMaximize, LpProblem, LpVariable, lpSum, value

# Creamos un grÃ¡fico dirigido
G = nx.DiGraph()

# Nombres descriptivos para los nodos
nodes_map = {'s': 'Embalse', 'a': 'Distrito A', 'b': 'Distrito B', 'c': 'Distrito C', 't': 'Distrito Principal'}

# AÃ±adimos los bordes al grÃ¡fico junto con sus capacidades (representando las tuberÃ­as)
edges = [('s', 'a', 16), ('s', 'b', 13), ('a', 'b', 10), ('a', 't', 12), ('b', 'a', 4), ('b', 'c', 14), ('c', 't', 20), ('c', 'b', 9)]
G.add_weighted_edges_from(edges)

# Creamos un diseÃ±o de red personalizado para representar mejor el flujo
pos = {node: coord for node, coord in zip(['s', 'a', 'b', 'c', 't'], [[0, 1], [1, 2], [1, 0], [2, 1], [3, 1]])}

# Visualizamos la red
plt.figure(figsize=(12, 8))
edge_labels = {(u, v): w['weight'] for u, v, w in G.edges(data=True)}
nx.draw_networkx_edge_labels(G, pos, edge_labels=edge_labels)
nx.draw(G, pos, with_labels=True, labels=nodes_map, node_size=3000, node_color="lightblue", edge_color="gray", font_size=15, width=2)
plt.title("Red de DistribuciÃ³n de Agua")
plt.show()

------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [1;32mIn[1], line 2[0m
[0;32m      1[0m [38;5;66;03m# Importamos las bibliotecas necesarias[39;00m
[1;32m----> 2[0m [38;5;28;01mimport[39;00m [38;5;21;01mnetworkx[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnx[39;00m
[0;32m      3[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m [38;5;28;01mas[39;00m [38;5;21;01mplt[39;00m
[0;32m      4[0m [38;5;28;01mfrom[39;00m [38;5;21;01mpulp[39;00m [38;5;28;01mimport[39;00m LpMaximize, LpProblem, LpVariable, lpSum, value

[1;31mModuleNotFoundError[0m: No module named 'networkx'

